/**
 * This class is generated by jOOQ
 */
package com.metapx.pixeltransfer.database.generated.tables.records;


import com.metapx.pixeltransfer.database.generated.tables.System;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemRecord extends UpdatableRecordImpl<SystemRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -1310943554;

    /**
     * Setter for <code>PUBLIC.SYSTEM.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.SYSTEM.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.SYSTEM.SCHEMA_VERSION</code>.
     */
    public void setSchemaVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.SYSTEM.SCHEMA_VERSION</code>.
     */
    public Integer getSchemaVersion() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return System.SYSTEM.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return System.SYSTEM.SCHEMA_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getSchemaVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemRecord value2(Integer value) {
        setSchemaVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SystemRecord
     */
    public SystemRecord() {
        super(System.SYSTEM);
    }

    /**
     * Create a detached, initialised SystemRecord
     */
    public SystemRecord(Integer id, Integer schemaVersion) {
        super(System.SYSTEM);

        set(0, id);
        set(1, schemaVersion);
    }
}
