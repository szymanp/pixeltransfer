/**
 * This class is generated by jOOQ
 */
package com.metapx.pixeltransfer.database.generated.tables.records;


import com.metapx.pixeltransfer.database.generated.tables.ImageFolder;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImageFolderRecord extends TableRecordImpl<ImageFolderRecord> implements Record3<Integer, Integer, Byte> {

    private static final long serialVersionUID = -1032302606;

    /**
     * Setter for <code>PUBLIC.IMAGE_FOLDER.IMAGE_ID</code>.
     */
    public void setImageId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.IMAGE_FOLDER.IMAGE_ID</code>.
     */
    public Integer getImageId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.IMAGE_FOLDER.FOLDER_ID</code>.
     */
    public void setFolderId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.IMAGE_FOLDER.FOLDER_ID</code>.
     */
    public Integer getFolderId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PUBLIC.IMAGE_FOLDER.STATE</code>.
     */
    public void setState(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.IMAGE_FOLDER.STATE</code>.
     */
    public Byte getState() {
        return (Byte) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Byte> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Byte> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ImageFolder.IMAGE_FOLDER.IMAGE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ImageFolder.IMAGE_FOLDER.FOLDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return ImageFolder.IMAGE_FOLDER.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getImageId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getFolderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ImageFolderRecord value1(Integer value) {
        setImageId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ImageFolderRecord value2(Integer value) {
        setFolderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ImageFolderRecord value3(Byte value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ImageFolderRecord values(Integer value1, Integer value2, Byte value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImageFolderRecord
     */
    public ImageFolderRecord() {
        super(ImageFolder.IMAGE_FOLDER);
    }

    /**
     * Create a detached, initialised ImageFolderRecord
     */
    public ImageFolderRecord(Integer imageId, Integer folderId, Byte state) {
        super(ImageFolder.IMAGE_FOLDER);

        set(0, imageId);
        set(1, folderId);
        set(2, state);
    }
}
